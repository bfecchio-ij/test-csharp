// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteCSharp.InfraData.Contexts;

namespace TesteCSharp.InfraData.Migrations
{
    [DbContext(typeof(CSharpContext))]
    partial class CSharpContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TesteCSharp.Domains.Entidades.CandidateExperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BeginDate")
                        .IsRequired()
                        .HasColumnType("varchar(48)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("varchar(48)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasColumnType("varchar(48)");

                    b.Property<Guid>("IdCandidate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ModifyDate")
                        .IsRequired()
                        .HasColumnType("varchar(48)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("numeric(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCandidate");

                    b.ToTable("CandidateExperience");
                });

            modelBuilder.Entity("TesteCSharp.Dominio.Entidades.Candidates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Birthdate")
                        .IsRequired()
                        .HasColumnType("varchar(48)");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("varchar(48)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ModifyDate")
                        .IsRequired()
                        .HasColumnType("varchar(48)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("TesteCSharp.Domains.Entidades.CandidateExperience", b =>
                {
                    b.HasOne("TesteCSharp.Dominio.Entidades.Candidates", "Candidates")
                        .WithMany("Experiences")
                        .HasForeignKey("IdCandidate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("TesteCSharp.Dominio.Entidades.Candidates", b =>
                {
                    b.Navigation("Experiences");
                });
#pragma warning restore 612, 618
        }
    }
}
